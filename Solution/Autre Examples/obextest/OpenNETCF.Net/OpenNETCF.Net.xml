<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenNETCF.Net</name>
    </assembly>
    <members>
        <member name="T:OpenNETCF.Net.AccessPointCollection">
            <summary>
            Class that represents a collection of the SSID values
            that a given network adapter can hear over the 
            airwaves.  For each SSID, you can get the signal
            strength and random other information.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.AccessPointCollection.Item(System.Int32)">
            <summary>
            Retrieve the indicated item from the collection.
            </summary>
            <param name="index">
            Zero-based index of SSID item to retrieve.
            </param>
            <returns>
            SSID found at index position in collection
            </returns>
        </member>
        <member name="M:OpenNETCF.Net.AccessPointCollection.Refresh">
            <summary>
            Refresh the list of SSID values, asking the 
            adapter to scan for new ones, also.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AccessPointCollection.AssociatedAdapter">
            <summary>
            The Adapter instance with which the SSID instance
            is associated.
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.Adapter">
            <summary>
            Class representing a single instance of a network
            adapter, which might include PCMCIA cards, USB network
            cards, built-in Ethernet chips, etc.
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.Adapter.StrengthFetcher">
            <summary>
            Field, if set, is used, if the NDISUIO method
            fails, to get the RF signal strength.  You might 
            use this on an OS earlier than 4.0, when NDISUIO
            became available.  You'd usually create your own
            subclass of StrengthAddon, then assign an instance
            of that subclass to this property, then ask for
            the signal strength.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.Name">
            <summary>
            The NDIS/driver assigned adapter name.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.Description">
            <summary>
            The descriptive name of the adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.Index">
            <summary>
            The index in NDIS' list of adapters where this
            adapter is found.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.Type">
            <summary>
            The adapter type.  Adapters can be standard
            Ethernet, RF Ethernet, loopback, dial-up, etc.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.MacAddress">
            <summary>
            The hardware address associated with the adapter.
            For Ethernet-based adapters, including RF Ethernet
            adapters, this is the Ethernet address.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.DhcpEnabled">
            <summary>
            Indicator of whether DHCP (for IP address 
            assignment from a server), is enabled for the
            adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.CurrentIpAddress">
            <summary>
            The currently active IP address of the adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.CurrentSubnetMask">
            <summary>
            The currently active subnet mask address of the 
            adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.Gateway">
            <summary>
            The active gateway address.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.DhcpServer">
            <summary>
            The DHCP server from which the IP address was
            last assigned.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.HasWins">
            <summary>
            Indicates the presence of WINS server addresses
            for the adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.PrimaryWinsServer">
            <summary>
            The IP address of the primary WINS server for the
            adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.SecondaryWinsServer">
            <summary>
            The IP address of the secondary WINS server for the
            adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.LeaseObtained">
            <summary>
            The date/time at which the IP address lease was
            obtained from the DHCP server.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.LeaseExpires">
            <summary>
            The date/time at which the IP address lease from
            the DHCP server will expire (at which time the
            adapter will have to contact the server to renew
            the lease or stop using the IP address).
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.IsWireless">
            <summary>
            Returns a Boolean indicating if the adapter is
            an RF Ethernet adapter.
            </summary>
            <returns>
            true if adapter is RF Ethernet; false otherwise
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.AssociatedAccessPoint">
            <summary>
            Returns the currently-attached SSID for RF
            Ethernet adapters.
            </summary>
            <returns>
            Instance of SSID class (or null if not associated).
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.SignalStrengthInDecibels">
            <summary>
            Returns the strength of the RF Ethernet signal
            being received by the adapter, in dB.
            </summary>
            <returns>
            integer strength in dB; zero, if adapter is not
            an RF adapter or an error occurred
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.SignalStrength">
            <summary>
            Returns a SignalStrength class representing the current strength
            of the signal.
            </summary>
            <returns>
            SignalStrength
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.Adapter.NearbyAccessPoints">
            <summary>
            Returns a list of the SSID values which the 
            adapter can currently 'hear'.
            </summary>
            <returns>
            SSIDList instance containing the SSIDs.
            </returns>
        </member>
        <member name="T:OpenNETCF.Net.AdapterCollection">
            <summary>
            Class that represents a collection of network adapters 
            connected to the Windows CE device.  Each adapter can 
            be queried for information such as the signal strength 
            (RF only), the activity state, etc.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.AdapterCollection.#ctor">
            <summary>
            Constructor loads the list by querying the 
            operating system for the list of adapters which
            are currently connected.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.AdapterCollection.Refresh">
            <summary>
            Clears and reconstructs the list of adapters,
            based on the current hardware connections to the
            device.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.AdapterCollection.Item(System.Int32)">
            <summary>
            Retrieve the indicated item from the collection.
            </summary>
            <param name="index">
            Zero-based index of Adapter item to retrieve.
            </param>
            <returns>
            Adapter found at index position in collection
            </returns>
        </member>
        <member name="T:OpenNETCF.Net.AdapterType">
            <summary>
            Different NIC adapter types
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.ConnectionInfo">
            <summary>
            Summary description for ConnectionInfo.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionInfo.ToPtr">
            <summary>
            Writes the ConnectionInfo data to unmanaged memory.
            </summary>
            <returns>A pointer to the unmanaged memory block storing the ConnectionInfo data</returns>		
        </member>
        <member name="M:OpenNETCF.Net.ConnectionInfo.Dispose">
            <summary>
            Disposes of the ConnectionInfo object.
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.ConnectionManagerState">
            <summary>
            Specifies the network connection state.
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.ConnectionStatus">
            <summary>
            Describes the current status of the connection
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.Unknown">
            <summary>
            Unknown status
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.Connected">
            <summary>
            Connection is up
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.Disconnected">
            <summary>
            Connection is disconnected
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.ConnectionFailed">
            <summary>
            Connection failed and cannot not be re-established
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.ConnectionCancelled">
            <summary>
            User aborted connection
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.ConnectionDisabled">
            <summary>
            Connection is ready to connect but disabled
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.NoPathToDestination">
            <summary>
            No path could be found to destination
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.WaitingForPath">
            <summary>
            Waiting for a path to the destination
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.WaitingForPhone">
            <summary>
            Voice call is in progress
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.WaitingConnection">
            <summary>
            Attempting to connect
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.WaitingForResource">
            <summary>
            Resource is in use by another connection
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.WaitingForNetwork">
            <summary>
            No path could be found to destination
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.WaitingDisconnection">
            <summary>
            Connection is being brought down
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.ConnectionStatus.WaitingConnectionAbort">
            <summary>
            Aborting connection attempt
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.ConnectionManager">
            <summary>
            A class that handles opening and closing of network connections. 
            <para>
            It is important to remember that when connecting asynchronous, 
            you must poll the connection status in your code.
            </para>
            <example>
            <code>
            bool connected = false;
            ConnectionManger connMgr = new ConnectionManager();
            connMgr.Connect(true, ConnectionMode.Asynchronous);
            while(!connected)
            {
                if(connMgr.Status != ConnectionStatus.Connected)
                {
            	    Thread.Sleep(1000);
            	    continue;
                }
                connected = true;
            }
            // Now we are connected and can do something... 
            </code>
            </example>
            <para>
            It is also important to note that creating a non-exclusive 
            connection will result in your application being unable to 
            programmatically disconnect.
            </para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.#ctor">
            <summary>
            Creates a new instance of the Connection Manager object.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.ConnectEvent(System.EventArgs)">
            <summary>
            Raises the OpenNETCF.Net.ConnectionManager.OnConnect event.
            </summary>
            <param name="e">A System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.DisconnectEvent(System.EventArgs)">
            <summary>
            Raises the OpenNETCF.Net.ConnectionManager.Disconnected event.
            </summary>
            <param name="e">A System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.ConnectionStateChangedEvent(System.EventArgs)">
            <summary>
            Raises the OpenNETCF.Net.ConnectionManager.ConnectionStateChanged event.
            </summary>
            <param name="e">A System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.ConnectionFailedEvent(System.EventArgs)">
            <summary>
            Raises the OpenNETCF.Net.ConnectionManager.ConnectionFailed event.
            </summary>
            <param name="e">A System.EventArgs object that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.Connect">
            <summary>
            Makes an exclusive, asynchronous connection with Connection Manager using the system default destination. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.Connect(System.Boolean)">
            <summary>
            Makes an asynchronous connection with Connection Manager using the system default destination.
            </summary>
            <param name="exclusive">True creates an exclusive connection; false creates a non-exclusive connection.</param>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.Connect(OpenNETCF.Net.ConnectionMode)">
            <summary>
            Makes an exclusive connection with Connection Manager using the system default destination.
            </summary>
            <param name="mode">States how the connection is to be made: either Synchronous or Asynchronous</param>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.Connect(System.Boolean,OpenNETCF.Net.ConnectionMode)">
            <summary>
            Makes a connection with Connection Manager using the system default destination.
            </summary>
            <param name="exclusive">True creates an exclusive connection; false creates a non-exclusive connection.</param>
            <param name="mode">States how the connection is to be made: either Synchronous or Asynchronous</param>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.Connect(System.Guid,System.Boolean,OpenNETCF.Net.ConnectionMode)">
            <summary>
            Makes a connection with Connection Manager using the specified destination.
            </summary>
            <param name="destGuid">The destination to connect to.</param>
            <param name="exclusive">Determines whether the connection should be exclusive or not.</param>
            <param name="mode">Determines how the connection is to be made: either Synchronous or Asynchronous</param>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.MapUrl(System.String)">
            <summary>
            Maps a URL to a destination GUID.
            </summary>
            <param name="Url">The URL to map.</param>
            <returns>The GUID the URL is mapped to.</returns>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.Disconnect">
            <summary>
            Disconnection the current connection.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.Disconnect(System.IntPtr)">
            <summary>
            Disconnection the connection whose handle is hConnection.
            </summary>
            <param name="hConnection">The handle of the connection to close.</param>
        </member>
        <member name="M:OpenNETCF.Net.ConnectionManager.EnumDestinations">
            <summary>
            Returns a collection of destinations specified within the system.
            </summary>
            <returns>A DestinationInfo collection with details of all the destinations in the system.</returns>
        </member>
        <member name="P:OpenNETCF.Net.ConnectionManager.State">
            <summary>
            The current connection state of Connection Manager
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.ConnectionManager.Handle">
            <summary>
            Returns a handle to the current connection.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.ConnectionManager.Status">
            <summary>
            Describes the current state of the connection
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.ConnectionManager.Timeout">
            <summary>
            Specifies the timeout for a synchronous connection attempt
            </summary>
        </member>
        <member name="E:OpenNETCF.Net.ConnectionManager.OnConnect">
            <summary>
            Occurs when a connection is opened.
            </summary>
        </member>
        <member name="E:OpenNETCF.Net.ConnectionManager.OnDisconnect">
            <summary>
            Occurs when a connection is closed.
            </summary>
        </member>
        <member name="E:OpenNETCF.Net.ConnectionManager.OnConnectionStateChanged">
            <summary>
            Occurs when the connection state is changed.
            </summary>
        </member>
        <member name="E:OpenNETCF.Net.ConnectionManager.OnConnectionFailed">
            <summary>
            Occurs when a connection fails.
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.DestinationInfo">
            <summary>
            Contains information about a specific network.
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.DestinationInfo.NativeSize">
            <summary>
            Size of the DestinationInfo structure in unmanaged memory.
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.DestinationInfo.guid">
            <summary>
            The destination's GUID identifier.
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.DestinationInfo.description">
            <summary>
            The destination's description.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.DestinationInfo.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.DestinationInfo.#ctor(System.IntPtr)">
            <summary>
            Creates a new instance of DestinationInfo at the specific memory address.
            </summary>
            <param name="baseAddr">Memory address where the DestinationInfo object should be created.</param>
        </member>
        <member name="T:OpenNETCF.Net.DestinationInfoCollection">
            <summary>
            Summary description for DestinationInfoCollection.
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.NetworkType">
            <summary>
            Enumeration returned in the NetworkTypeInUse property.
            Indicates the general type of radio network in use.
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.NetworkType.FH">
            <summary>
            Indicates the physical layer of the frequency hopping spread-spectrum radio
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.NetworkType.DS">
            <summary>
            Indicates the physical layer of the direct sequencing spread-spectrum radio
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.NetworkType.OFDM5">
            <summary>
            Indicates the physical layer for 5-GHz Orthagonal Frequency Division Multiplexing radios
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.NetworkType.OFDM24">
            <summary>
            Indicates the physical layer for 24-GHz Orthagonal Frequency Division Multiplexing radios
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.InfrastructureMode">
            <summary>
            Define the general network infrastructure mode in
            which the selected network is presently operating.
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.InfrastructureMode.AdHoc">
            <summary>
            Specifies the independent basic service set (IBSS) mode. This mode is also known as ad hoc mode
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.InfrastructureMode.Infrastructure">
            <summary>
            Specifies the infrastructure mode.
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.InfrastructureMode.AutoUnknown">
            <summary>
            The infrastructure mode is either set to automatic or cannot be determined.
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.NetworkAdapter">
            <summary>
            Exposes methods for network adapter identification
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.NetworkAdapter.GetAdaptersInfo">
            <summary>
            Get an array of available network adapters
            </summary>
            <returns>aArray of AdapterInfo classes</returns>
        </member>
        <member name="T:OpenNETCF.Net.AdapterInfo">
            <summary>
            Class that provides information about a specific network adapter
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.AdapterName">
            <summary>
            The adapter name
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.Description">
            <summary>
            Adapter description
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.MACAddress">
            <summary>
            Adapter's MAC address
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.Index">
            <summary>
            Index of the adapter in the list of available adapters
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.Type">
            <summary>
            Adapter type
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.DhcpEnabled">
            <summary>
            Is DHCP enabled for this adapter?
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.CurrentIpAddress">
            <summary>
            Current IP address of the adapter
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.Gateway">
            <summary>
            Gateway assigned to the adapter
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.DhcpServer">
            <summary>
            IP address of the DHCP server
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.HasWins">
            <summary>
            Does this adapter use WINS?
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.PrimaryWinsServer">
            <summary>
            IP address of the primary WINS server for this adapter
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.SecondaryWinsServer">
            <summary>
            IP address of the primary WINS server for this adapter
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.LeaseObtained">
            <summary>
            Time when current DHCP lease was obtained
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AdapterInfo.LeaseExpires">
            <summary>
            Time when current DHCP lease expires
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.IP_ADDR_STRING">
            <summary>
            Class IP_ADDR_STRING 
            Description:
            Implementation of custom marshaller for IPHLPAPI IP_ADDR_STRING
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.IP_ADDRESS_STRING">
            <summary>
            Class IP_ADDRESS_STRING 
            Description:
            Implementation of custom marshaller for IPHLPAPI IP_ADDRESS_STRING
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.Networking">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.Networking.GetAdapters">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Net.NDIS_802_11_CONFIGURATION_FH.DwellTime">
            <summary>
            Amount of time dwelling in each frequency (in kusec).
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.NDIS_802_11_BSSID_LIST">
            <summary>
            This class represents the data returned by the 
            OID_802_11_BSSID_LIST query to an RF Ethernet adapter.
            It is just used during parsing of the returned data
            and really should not persist.
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.AccessPoint">
            <summary>
            The SSID class represents a single SSID value which
            an adapter might be receiving data from.  It can be
            queried for SSID-specific information for the
            associated adapter such as signal strength.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AccessPoint.Name">
            <summary>
            The SSID name string.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AccessPoint.MacAddress">
            <summary>
            The hardware address for the network adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AccessPoint.Privacy">
            <summary>
            The privacy mask for the adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.AccessPoint.SignalStrengthInDecibels">
            <summary>
            Returns the strength of the RF Ethernet signal
            being received by the adapter for the SSID, in dB.
            </summary>
            <returns>
            integer strength in dB; zero, if adapter is not
            an RF adapter or an error occurred
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.AccessPoint.SignalStrength">
            <summary>
            Returns the strength of the RF Ethernet signal
            being received by the adapter for the SSID, in dB.
            </summary>
            <returns>
            SignalStrength instance containing the strength
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.AccessPoint.SupportedRates">
            <summary>
            Returns the list of supported signaling rates for
            the adapter.  Each value indicates a single rate.
            </summary>
            <returns>
            array of bytes, each of which represents a rate.
            The units are 0.5Mbps.  Rates that belong to the
            'basic rate set' have their high bits set to 1
            (they are OR-ed with 0x80).  Rates which are not
            in the basic rate set, have this bit clear.
            So, a value of 0x96, after clearing the
            high bit, is 0x16 or 22d.  Multiplying by 0.5Mbps 
            gives a rate of 11Mbps.  Since the high bit was
            set, this rate is in the basic rate set.
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.AccessPoint.NetworkTypeInUse">
            <summary>
            Returns the current type of network in use in
            the form of an element of the 
            Ndis80211NetworkType enumeration.
            </summary>
            <returns>
            Ndis80211NetworkType network type
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.AccessPoint.InfrastructureMode">
            <summary>
            Returns the current infrastructure in use by the
            adapter.
            </summary>
            <returns>
            Ndis80211NetworkInfrastructure type
            </returns>
        </member>
        <member name="T:OpenNETCF.Net.StrengthAddon">
            <summary>
            Abstract class representing a 'different' method of
            finding the signal strength for a network adapter. 
            You might need to provide a subclass of this class
            when your code runs on Windows CE 3.0 or earlier or
            when the signal strength is not retrievable via the
            Windows CE.NET NDISUIO driver in the standard 802.11
            manner.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.StrengthAddon.RFSignalStrengthDB(OpenNETCF.Net.Adapter)">
            <summary>
            Abstract method.  Your subclass of StrengthAddon
            must implement this method and do whatever is 
            needed to get the RF signal strength in dB from
            the indicated adapter.  Return 0 if the adapter
            is not an RF adapter or there is an error.
            </summary>
            <param name="a">
            Instance of Adapter class for which signal strength is to be returned
            </param>
            <returns>
            int signal strength in dB or zero for error
            </returns>
        </member>
        <member name="M:OpenNETCF.Net.StrengthAddon.RFSSID(OpenNETCF.Net.Adapter)">
            <summary>
            Abstract method.  Your subclass of StrengthAddon
            must implement this method and do whatever is 
            needed to get the current SSID from the indicated 
            adapter.  Return null if the adapter is not an RF 
            adapter, if it is not presently associated, or 
            there is an error.
            </summary>
            <param name="a">
            Instance of Adapter class for which SSID is to be returned
            </param>
            <returns>
            String SSID string or null for error or unassociated
            </returns>
        </member>
        <member name="T:OpenNETCF.Net.StrengthType">
            <summary>
            The StrengthType enumeration provides a list of 
            relative RF Ethernet signal strength values that 
            correspond to the strengths displayed by Windows CE
            itself.
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.SignalStrength">
            <summary>
            The SignalStrength class provides a repository for the
            signal strength indication from an RF Ethernet network
            adapter.  From an instance of this class, you can get
            the signal strength in dB, an enumerated value of 
            type StrengthType indicating the relative strength, or
            a string representing the relative strength.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.SignalStrength.DBToStrength(System.Int32)">
            <summary>
            The DBToStrength static conversion function can
            be used to take a dB strength value previously
            retrieved and generate a StrengthType enumeration
            value based on the relative strength.
            </summary>
            <param name="db">
            Signal strength in dB
            </param>
            <returns>
            StrengthType indicating strength that db parameter represents
            </returns>
        </member>
        <member name="M:OpenNETCF.Net.SignalStrength.DBToString(System.Int32)">
            <summary>
            The DBToString static conversion function allows a
            signal strength value in dB previously retrieved
            to be converted into the string representation of
            its relative signal strength.
            </summary>
            <param name="db">
            Signal strength in dB.
            </param>
            <returns>
            String: "No Signal", "Very Low", "Low", "Good", 
            "Very Good", "Excellent", or 
            "Not a wireless adapter". 
            </returns>
        </member>
        <member name="M:OpenNETCF.Net.SignalStrength.StrengthToString(OpenNETCF.Net.StrengthType)">
            <summary>
            The StrengthToString static conversion function
            allows a previously stored signal strength 
            enumeration value to be converted into its string
            representation.
            </summary>
            <param name="st">
            One of the SignalStrength enumeration values.
            </param>
            <returns>
            String: "No Signal", "Very Low", "Low", "Good", 
            "Very Good", "Excellent", or 
            "Not a wireless adapter". 
            </returns>
        </member>
        <member name="M:OpenNETCF.Net.SignalStrength.ToString">
            <summary>
            Converts strength to string representing relative
            strength ("Good", "Low", etc.)
            </summary>
            <returns>
            String: "No Signal", "Very Low", "Low", "Good", 
            "Very Good", "Excellent", or 
            "Not a wireless adapter". 
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.SignalStrength.Decibels">
            <summary>
            The Decibels property returns the signal strength
            in dB.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.SignalStrength.Strength">
            <summary>
            Strength of signal as enumerated type.
            </summary>
        </member>
    </members>
</doc>
