============================== RELEASE HISTORY ============================
* Feb 16, 04 - SDF 1.0 Released
===========================================================================
* May 17, 04 - SDF 1.1 Released
===========================================================================


============================== Change Log =================================
* -------------------------
* July 13, 2004 - Neil Cowburn
* -------------------------
* Tracing:
* - Added DiagnosticsConfigurationHandler
* - Added DiagnosticsConfiguration
* - Added TraceEx
* - Added TraceInternalEx
* Configuration:
* - Added +1 overload to ConfigurationSettings.GetConfig to take string 'appPath' parameter
*   This was necessary to get the Tracing working
* Machine.config
* - Added "system.diagnostics" section to support Tracing
*
* -------------------------
* July 12, 2004 - Chris Tacke
* -------------------------
* Crypto Internal Classes:
* - Removed _BigInteger class
* - Removed Dsa.cs dependence on _BigInteger class
*
* -------------------------
* July 11, 2004 - casey chesnut
* -------------------------
* PasswordDeriveBytes.cs
* -added basic GetBytes() implementation, added inheritance
* System.Security.Cryptography
* -added DeriveBytes.cs, Rijndael.cs, SHA256.cs abstract classes
* -broke internal classes into System.Security.Cryptography.NativeMethods namespace
* -added CipherMode and PaddingMode enums
*
* -------------------------
* July 10, 2004 - casey chesnut
* -------------------------
* Crypto.cs:
* Cipher.cs:
*  Fixed bug where UnprotectData was not retrieving description from DPAPI
* 
* -------------------------
* July 8, 2004 - Peter Foot
* -------------------------
* Process.cs:
*  Fixed bug where arguments weren't null terminated
*  Improved hProcess handling
*  Modified GetCurrentProcess to return a Process object (like desktop)
*
* -------------------------
* July 7, 2004 - Chris Tacke
* -------------------------
* Process.cs:
* - Added support for GetCurrentProcess, GetCurrentThread, GetCurrentProcessID
*   GetCurrentThreadID
* - Made OpenProcess, CloseHandle and TerminateProcess internal instead of private
* - Added the Toolhelp namespace
*   - ProcessEntry.cs
*  
*
* -------------------------
* July 6, 2004 - Chris Tacke
* -------------------------
* Port.cs:
* - Added submission from Helge René Urholm
*   - Added IREnable property
*
* -------------------------
* June 25, 2004 - Mark Arteaga
* ------------------------- 
* EventLog.cs
* - Added overloaded constructor for EventLog to allow users of the EventLog class to implement thier own IEventLogWriter
*
* EventLogWriterType.cs
* - Removed SQLCE and Text from EventLogWriterType
* - Added Custom to EventLogWriterType
*
* -------------------------
* June 24, 2004 - Chris Tacke
* ------------------------- 
* FileVersionInfo.cs:
* - modified the FileVersionInfo to use the new MarshalEx class instead of obsolete Core methods
*
* -------------------------
* June 24, 2004 - Chris Tacke (submission from Udo Killermann (ukiller))
* ------------------------- 
* CommAPI.cs:
* - added QueryFile method in the CommAPI base class and it's derived classes CECommAPI WinCommAPI as well
* 	* the QueryFile method maps to the CreateFile method with AccessMask set to zero
* - added GetCommProperties in CommAPI, CECommAPI, and WinCommAPI
*	* added DllImport for GetCommProperties in CE and Desktop classes
*
* PortCapabilities.cs:
* - created new PortCapabilities class that maps the access to the port's capabilities as returned by GetCommProperties
* - mapped the original DEFINEs to BitVector32 definitions and added accessors to the Comm capabilities using BitVector32 masks
* 
* Port.cs:
* - added public member "Capabilities" to access current port's capabilities
* - added public Query() method to access the port's capabilities without having to Open() it first
* - added private GetPortProperties() method that is called from Open() and Query() to get the port's capabilities
* 
* -------------------------
* June 22, 2004 - Peter Foot
* ------------------------- 
* - Added ReAllocHGlobal to MarshalEx
* - Created EnvironmentEx and EnumEx classes and marked old as Obsolete
* - Redirected memory allocation/realloc/free methods to call MarshalEx methods and marked as Obsolete (warning only, not build error)
* - Replaced calls to Core.LocalAlloc etc with MarshalEx equivalents throughout OpenNETCF.dll
*
* -------------------------
* June 17, 2004 - Peter Foot
* -------------------------
* - Fixed bug in QueryPerformanceCounter and QueryPerformanceFrequency - now uses Int64 type
* - Removed unsupported constants from Environment.SpecialFolders enumeration
* - Fixed Environment.SystemDirectory error handling
* - Added new method/properties to Environment - GetLogicalDrives(), MachineName and UserName
*
* -------------------------
* June 16, 2004 - Chris Tacke
* -------------------------
* - Added MathEx class
* - Added BitReversedLUT class
* - Added TrigonometricLUT class
*
* -------------------------
* June 14, 2004 - Chris Tacke
* -------------------------
* - Fixed bugs in Port c'tors to set name of port
* - Added Udo Killerman's submitted UpdateSettings and calls to it in port.cs so changes made to port setting while the port is open are applied without closing and re-opening
* - Minor fix to Port.Close to set isOpen to false
* - changed Port.Name to ensure CE port names are suffixed with a colon
* - Fixed name typos in EventLog.EventWriter classes
*
* -------------------------
* June 10, 2004 - Mark Arteaga
* -------------------------
* - Added OpenNETCF.Diagnostics.EventLog
*
* -------------------------
* May 24, 2004 - Chris Tacke
* -------------------------
* - Fixed layout order for DCB.cd
* - Made FileEx.FileAccess enum CLSCompliant
* 
* -------------------------
* May 18, 2004 - Peter Foot
* -------------------------
* - Added "New in v1.1" to all new classes
* - Implemented some method stubs for Environment
*
* -------------------------
* May 12, 2004 - Neil Cowburn
* -------------------------
* - Fixed CLSCompliancy issues in Crypto and others
*
* -------------------------
* May 11, 2004 - Neil Cowburn
* -------------------------
* - Added new namespace: Security
* - Added new namespace: Security.Cryptography
* - Added Casey's crypto implemented to OpenNETCF.Security.Cryptography
* 
* -------------------------
* May 6, 04 - Chris Tacke
* -------------------------
* - Reworked CommAPI class implementations by Udo Killermann to use inherited 
*   classes for API calls.  This means the pltform difference is checked once
*   at creation, not with every API call.  This is *much* cleaner
* - Reworked CommStat class to use BitVector32 instead of bit masking and shifting
*
* -------------------------
* May 3, 04 - Chris Tacke
* -------------------------
* - Replaced original DCB with implementation by Udo Killermann to use a 
*   BitVector32 instead of bit masking and shifting.
*
* -------------------------
* April 30, 04 - Peter Foot
* -------------------------
* - Moved ProcessStartInfo to separate code file
* - Added ProcessWindowStyle enumeration
* - Added partial support for WindowStyle property to ProcessStartInfo
*
* -------------------------
* April 28, 04 - Neil Cowburn
* -------------------------
* - Tidied up code in OpenNETCF.Configuration
* - Added default machine.config
*
* -------------------------
* April 22, 04 - Neil Cowburn
* -------------------------
* - Completion of documentation for CreateMutex
*
* -------------------------
* April 20, 04 - Peter Foot
* -------------------------
* - Minor rewrites to Enum documentation
*
* -------------------------
* April 20, 04 - Neil Cowburn
* -------------------------
* - Replaced ConfigurationSettings.cs with a complete rewrite
* - OpenNETCF.Configuration now compatible with full .NET Fx
*
* -------------------------
* April 19, 04 - Chris Tacke
* -------------------------
* - Removed event marshallers from port.cs
* - fixed DataReceived logic bug in thread
*
* -------------------------
* April, 14 - Peter Foot
* -------------------------
* - Changed SynchronizationLockException to derive from SystemException
* - Completed documentation for SynchronisationLockException
*
* -------------------------
* April, 13 - Peter Foot
* -------------------------
* - Added missing values to OpenNETCF.Win32.Win32Window.WindowStyleExtended enumeration (http://www.opennetcf.org/forums/topic.asp?TOPIC_ID=1767)
*
* -------------------------
* April, 04 - Peter Foot
* -------------------------
* - Replaced GPL header in Enum.cs
* - Added wrapper functions to base System.Enum methods to Enum.cs
* - Added wrapper functions to base System.Environment methods in EnvironmentEx.cs
*
* -------------------------
* March, 29 - Chris Tacke
* -------------------------
* - Minor Port.cs mods to make it actully work without exceptions
* - Tested with BulkSerialVB sample app with 1024 block size and up to 115200 baud rate
*
* -------------------------
* March, 26 - Chris Tacke
* -------------------------
* - Added Control.Invoke calls to properly achieve what was attempted in the previous build
* - rearchitected the receive thread to use a Queue as a data FIFO
* - rewrote the Input method to use the FIFO instead of the byte buffer
*
* -------------------------
* March, 03 - Chris Tacke
* -------------------------
* - Added event marshallers to Port.cs to marshal events from the worker
*   threads to the primary thread so consumers don't have to use Control.Invoke
* - Added StreamInterfaceDriver.cs
* - Added enum MoveMethod, SetFilePointer and DeviceIoControl to FileEx.cs
* - Added WaitForMultipleObjects to Core.cs
*
* -------------------------
* Feb 20, 04 - Peter Foot
* -------------------------
* - Added fix submitted by Jon Skeet to MonitorEx.Enter method
* - Added new string methods to MarshalEx - PtrToStringAuto and overrides for PtrToStringAnsi and PtrToStringUni
* - Added FILETIME struct to OpenNETCF.Runtime.Interop namespace
*
* -------------------------
* Feb 19, 04 - Chris Tacke
* -------------------------
* - Added all methods from full-framework File class to FileEx.cs
*
* -------------------------
* Feb 10, 04 - Peter Foot
* -------------------------
* - Fixed VB bug 000081 by making BeepType CLSCompliant and changing the internal implementation
* - Added BolierPlate to MonitorEx.cs
*
* -------------------------
* Feb 4, 04 - Chris Tacke
* -------------------------
* - Added ThreadingEx class, courtesy of Jon Skeet
*
* -------------------------
* January 20, 04 - Chris Tacke
* -------------------------
* - Updated IO.Serial.Port class to reflect v. 1.4 changes
*
* -------------------------
* January 8, 04 - Chris Tacke
* -------------------------
* - Updated IO.Serial.Port class to reflect v. 1.3 changes
*
* -------------------------
* November 24, 03 - Chris Tacke
* -------------------------
* - Updated IO.Serial classes to reflect v. 1.2 (pre SDF release) changes
*
* -------------------------
* November 24, 03 - Neil Cowburn
* -------------------------
* - Changed AssemblyInfo.cs to use delayed signing and static version number
* -------------------------
* November 17, 03 - Peter Foot
* -------------------------
* - Added override for Win32Window GetWindowRect which returns a managed System.Drawing.Rectangle
*
* -------------------------
* November 15, 03 - Peter Foot
* -------------------------
* - Added P/Invoke for SystemParametersInfo to Core class (and supporting Enumerations)
* - Added PlatformName property to OpenNETCF.Environment class using above - used to determine platform at runtime (PocketPC, SmartPhone etc)
*
* -------------------------
* November 14, 03 - Peter Foot
* -------------------------
* - Added NDoc support to the project
* - Improved consistency of RegistryKey.DeleteSubKey method so it is easier to track an error
*
* -------------------------
* November 14, 03 - Neil Cowburn
* -------------------------
* - Adding all outstanding Marshal functions to InteropMarshal
* - Renamed InteropMarshal to MarshalEx
* - MarshalEx is now has the same functionality as Marshal, and more. 
* - Marked whole assembly as CLS Compliant (see AssemblyInfo.cs)
* - Completed comments in MarshalEx.cs
* - Flagged Win32.Core.Wait enum as CLSCompliant(false)
* - Flagged Win32.Core.WaitForSingleObject method as CLSCompliant(false)
* - Flagged Win32.Core.ProcessorArchitecture enum as CLSCompliant(false)
* - Flagged Win32.Core.SystemInfo.wProcessorArchitecture struct member as CLSCompliant(false)
* -------------------------
* November 12, 03 - Peter Foot
* ----------------------------
* - Added OpenNETCF/Diagnostics/FileVersionInfo
* - Separated out BitmapInfoHeader, BitmapFileHeader and DibSection into separate code files
* - CLS Compliance
* -------------------------
* November 7, 03 - Neil Cowburn
* -------------------------
* - Initial check-in
*
===========================================================================